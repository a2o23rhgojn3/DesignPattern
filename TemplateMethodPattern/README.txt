なぜ、Template Methodパターンを使用するのか
＊ロジックを共通化できるから。

	・Template Methodパターンを使用せず、コピペで複数のクラスを作成すると、似て非なるクラスが出来上がる。
	　作成したどれかのクラスにバグが発見された場合、似て非なるクラスをすべて確認しないといけない。

	　Template Methoddパターンを使用した場合、バグが発見されても、テンプレートメソッドさえ修正すればよい。

	・スーパークラスで定義した抽象メソッドがどのタイミングで呼ばれるかが分からないと、
	　サブクラスでの実装は難しい。

